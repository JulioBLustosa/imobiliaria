// <auto-generated />
using System;
using ImobiliariaWebView.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImobiliariaWebView.Migrations
{
    [DbContext(typeof(ImobiliariaContext))]
    partial class ImobiliariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ImobiliariaWebView.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("complemento");

                    b.Property<string>("Cpf_Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cpf_cnpj");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("logradouro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("nome");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("numero");

                    b.Property<string>("TelefoneCelular")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefone_celular");

                    b.Property<string>("TelefoneResidencial")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefone_residencial");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.HasKey("IdCliente");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("ImobiliariaWebView.Models.Imagem", b =>
                {
                    b.Property<int>("IdImagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_imagem");

                    b.Property<int>("IdImovel")
                        .HasColumnType("int")
                        .HasColumnName("id_imovel");

                    b.Property<string>("ImagemPath")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("imagem");

                    b.Property<int>("OrdemImagem")
                        .HasColumnType("int")
                        .HasColumnName("ordem_imagem");

                    b.HasKey("IdImagem");

                    b.ToTable("imagem_imovel");
                });

            modelBuilder.Entity("ImobiliariaWebView.Models.Imovel", b =>
                {
                    b.Property<int>("IdImovel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_imovel");

                    b.Property<string>("AreaAproximada")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("area_aproximada");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("bairro");

                    b.Property<int>("Banheiros")
                        .HasColumnType("int")
                        .HasColumnName("banheiros");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("complemento");

                    b.Property<string>("DescricaoImovel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao_imovel");

                    b.Property<bool>("Elevador")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("elevador");

                    b.Property<int>("IdLocador")
                        .HasColumnType("int")
                        .HasColumnName("id_locador");

                    b.Property<int>("IdTipoImovel")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_imovel");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("numero");

                    b.Property<int>("Quartos")
                        .HasColumnType("int")
                        .HasColumnName("quartos");

                    b.Property<int>("Suite")
                        .HasColumnType("int")
                        .HasColumnName("suite");

                    b.Property<float>("TaxaImobiliaria")
                        .HasColumnType("float")
                        .HasColumnName("taxa_imobiliaria");

                    b.Property<string>("TituloAnuncio")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("titulo_anuncio");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uf");

                    b.Property<int>("VagaCoberta")
                        .HasColumnType("int")
                        .HasColumnName("vaga_coberta");

                    b.Property<int>("VagaDescoberta")
                        .HasColumnType("int")
                        .HasColumnName("vaga_descoberta");

                    b.Property<float>("ValorAluguelProprietario")
                        .HasColumnType("float")
                        .HasColumnName("valor_aluguel_proprietario");

                    b.Property<float>("ValorCondominio")
                        .HasColumnType("float")
                        .HasColumnName("valor_condominio");

                    b.Property<float>("ValorIptu")
                        .HasColumnType("float")
                        .HasColumnName("valor_iptu");

                    b.HasKey("IdImovel");

                    b.ToTable("imovel");
                });

            modelBuilder.Entity("ImobiliariaWebView.Models.LocacaoImovel", b =>
                {
                    b.Property<int>("IdLocacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_locacao");

                    b.Property<DateTime>("DataFimVigencia")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_fim_vigencia");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_inicio_vigencia");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_locacao");

                    b.Property<string>("FinalidadeLocacao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("finalidade_locacao");

                    b.Property<int>("IdImovel")
                        .HasColumnType("int")
                        .HasColumnName("id_imovel");

                    b.Property<int>("IdLocatario")
                        .HasColumnType("int")
                        .HasColumnName("id_locatario");

                    b.Property<int>("PeriodoMinicoLocacao")
                        .HasColumnType("int")
                        .HasColumnName("periodo_minino_locacao");

                    b.Property<float>("TaxaAdministracao")
                        .HasColumnType("float")
                        .HasColumnName("taxa_administracao");

                    b.Property<float>("ValorAluguel")
                        .HasColumnType("float")
                        .HasColumnName("valor_aluguel");

                    b.HasKey("IdLocacao");

                    b.ToTable("locacao_imovel");
                });

            modelBuilder.Entity("ImobiliariaWebView.Models.TipoImovel", b =>
                {
                    b.Property<int>("IdTipoImovel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_imovel");

                    b.Property<string>("DescicaoTipoImovel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_imovel");

                    b.HasKey("IdTipoImovel");

                    b.ToTable("tipo_imovel");
                });
#pragma warning restore 612, 618
        }
    }
}
